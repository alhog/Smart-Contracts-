# Module: GeometricDataPackets.py
# This module defines the geometric data packet classes for triangles and squares.

class TriangleDataPacket:
    def __init__(self, data):
        self.sides = 3
        self.data = data

    def process_data(self):
        # Process the data contained within the triangle
        # This is a placeholder for the data processing logic
        pass

class SquareDataPacket:
    def __init__(self, data):
        self.sides = 4
        self.data = data

    def process_data(self):
        # Process the data contained within the square
        # This is a placeholder for the data processing logic
        pass

# Script: CreateGeometricDataPackets.py
# This script creates and processes geometric data packets.

from GeometricDataPackets import TriangleDataPacket, SquareDataPacket

def create_triangle_data_packet(data):
    triangle_packet = TriangleDataPacket(data)
    triangle_packet.process_data()
    return triangle_packet

def create_square_data_packet(data):
    square_packet = SquareDataPacket(data)
    square_packet.process_data()
    return square_packet

# Example usage
triangle_data = {'transaction': 'simple_payment', 'amount': 100}
square_data = {'contract': 'complex_agreement', 'parties': ['Alice', 'Bob']}

triangle_packet = create_triangle_data_packet(triangle_data)
square_packet = create_square_data_packet(square_data)
