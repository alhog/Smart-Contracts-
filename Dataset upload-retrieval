# Step 4: Dataset Upload

import os
from flask import request, send_from_directory

UPLOAD_FOLDER = 'uploads'
ALLOWED_EXTENSIONS = {'csv', 'xlsx'}

app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

@app.route('/upload', methods=['POST'])
@jwt_required()
def upload_file():
    if 'file' not in request.files:
        return jsonify({'message': 'No file part'}), 400
    
    file = request.files['file']
    if file.filename == '':
        return jsonify({'message': 'No selected file'}), 400

    if file and allowed_file(file.filename):
        filename = secure_filename(file.filename)
        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
        return jsonify({'message': 'File uploaded successfully'}), 200
    else:
        return jsonify({'message': 'File type not allowed'}), 400

# Step 5: Dataset Retrieval

@app.route('/datasets/<filename>', methods=['GET'])
@jwt_required()
def get_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)

# Step 6: Dataset Update (Not implemented in this example)

# Step 7: Dataset Deletion

@app.route('/datasets/<filename>', methods=['DELETE'])
@jwt_required()
def delete_file(filename):
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    if os.path.exists(filepath):
        os.remove(filepath)
        return jsonify({'message': 'File deleted successfully'}), 200
    else:
        return jsonify({'message': 'File not found'}), 404

# Step 8: List All Datasets

@app.route('/datasets', methods=['GET'])
@jwt_required()
def list_datasets():
    files = os.listdir(app.config['UPLOAD_FOLDER'])
    return jsonify({'datasets': files})

if __name__ == '__main__':
    app.run(debug=True)
