// Error handling middleware
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({ error: 'Internal Server Error' });
});

// Logging middleware
app.use((req, res, next) => {
    console.log(`${req.method} ${req.url} - ${req.ip}`);
    next();
});

// Protected route accessible only to admins with write permission
app.post('/admin/action', authenticateToken, authorize(ROLES.ADMIN, 'write'), (req, res) => {
    // Handle admin action
});

// Protected route accessible to all authenticated users
app.get('/user/info', authenticateToken, (req, res) => {
    // Send user information
});

// Start the server
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
